{"ast":null,"code":"var _jsxFileName = \"/home/cjope/Development/code/phase4/project/phase-4-project/client/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormLabel, Input, Link } from \"@material-ui/core\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignUp(_ref) {\n  _s();\n\n  let {\n    setUser\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const handleClickToOpen = () => {\n    setOpen(true);\n  };\n\n  const handleToClose = () => {\n    setOpen(false);\n  };\n\n  function handleSignUp(e) {\n    e.preventDefault();\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n        img_url: profilePic\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => setUser(user));\n      }\n    });\n\n    /*#__PURE__*/\n    _jsxDEV(Link, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    stlye: {},\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickToOpen,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleToClose,\n      onSubmit: handleSignUp,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            id: \"password\",\n            value: passwordConfirmation,\n            onChange: e => setPasswordConfirmation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleToClose,\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSignUp,\n          color: \"primary\",\n          autoFocus: true,\n          primary: \"true\",\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"IQYnwbk2eVsuUSc7oU7I8CcuNOs=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/cjope/Development/code/phase4/project/phase-4-project/client/src/components/SignUp.js"],"names":["React","useState","useHistory","Dialog","DialogTitle","DialogActions","DialogContent","Button","FormLabel","Input","Link","Form","SignUp","setUser","username","setUsername","password","setPassword","passwordConfirmation","setPasswordConfirmation","profilePic","setProfilePic","open","setOpen","history","handleClickToOpen","handleToClose","handleSignUp","e","preventDefault","fetch","method","headers","body","JSON","stringify","password_confirmation","img_url","then","r","ok","json","user","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { FormLabel, Input, Link } from \"@material-ui/core\";\nimport { Form } from \"react-bootstrap\";\n\nfunction SignUp({ setUser }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [profilePic, setProfilePic] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  const history = useHistory();\n\n  const handleClickToOpen = () => {\n    setOpen(true);\n  };\n\n  const handleToClose = () => {\n    setOpen(false);\n  };\n\n  function handleSignUp(e) {\n    e.preventDefault();\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n        img_url: profilePic,\n      }),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n    <Link to=\"/login\" />;\n  }\n\n  return (\n    <div stlye={{}}>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickToOpen}>\n        Signup\n      </Button>\n\n      <Dialog open={open} onClose={handleToClose} onSubmit={handleSignUp}>\n        <DialogTitle>{\"Sign Up\"}</DialogTitle>\n        <DialogContent>\n          <Form>\n            <FormLabel>Username</FormLabel>\n            <Input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            ></Input>\n          </Form>\n          <Form>\n            <FormLabel>Password</FormLabel>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Input>\n          </Form>\n          <Form>\n            <FormLabel>Confirm Password</FormLabel>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              value={passwordConfirmation}\n              onChange={(e) => setPasswordConfirmation(e.target.value)}\n            ></Input>\n          </Form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleToClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n          <Button\n            onClick={handleSignUp}\n            color=\"primary\"\n            autoFocus\n            primary=\"true\"\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}
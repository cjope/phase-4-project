{"ast":null,"code":"var _jsxFileName = \"/home/cjope/Development/code/phase4/project/phase-4-project/client/src/components/Items.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Items(_ref) {\n  _s();\n\n  let {\n    itemType\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const [itemName, setItemName] = useState(\"Plant\");\n  const [items, setItems] = useState([]);\n  const history = useHistory();\n\n  const handleClickToOpen = e => {\n    setOpen(true);\n    setItemName(e.target.name);\n  };\n\n  const handleToClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fetch(`/${itemType}`).then(r => r.json()).then(item => setItems(item));\n  }, [itemType]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        item_id: e.target.value\n      })\n    });\n    handleClickToOpen(e);\n  }\n\n  const handleNavigateCart = /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [itemName, \" added to your cart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => history.push(\"/cart\"),\n        children: \"Go to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleToClose,\n        children: \"Continue Shopping\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n\n  const listPlants = items === null || items === void 0 ? void 0 : items.map(plant => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: plant.img_url,\n      alt: \"product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: plant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"$\", plant.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-cart\",\n      value: plant.id,\n      name: plant.name,\n      onClick: e => handleSubmit(e),\n      children: \"Add to Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, plant.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop\",\n    children: [listPlants, \" \", handleNavigateCart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Items, \"04H/fx9ByLKEwOpSrpM8+ynSlLc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/home/cjope/Development/code/phase4/project/phase-4-project/client/src/components/Items.js"],"names":["Button","Dialog","DialogActions","DialogContent","React","useEffect","useState","useHistory","Items","itemType","open","setOpen","itemName","setItemName","items","setItems","history","handleClickToOpen","e","target","name","handleToClose","fetch","then","r","json","item","handleSubmit","preventDefault","method","headers","body","JSON","stringify","item_id","value","handleNavigateCart","push","listPlants","map","plant","img_url","price","id"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Items({ itemType }) {\n  const [open, setOpen] = React.useState(false);\n  const [itemName, setItemName] = useState(\"Plant\");\n  const [items, setItems] = useState([]);\n  const history = useHistory();\n\n  const handleClickToOpen = (e) => {\n    setOpen(true);\n    setItemName(e.target.name);\n  };\n\n  const handleToClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    fetch(`/${itemType}`)\n      .then((r) => r.json())\n      .then((item) => setItems(item));\n  }, [itemType]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        item_id: e.target.value,\n      }),\n    });\n    handleClickToOpen(e);\n  }\n\n  const handleNavigateCart = (\n    <Dialog open={open}>\n      <DialogContent>{itemName} added to your cart</DialogContent>\n      <DialogActions>\n        <Button onClick={(e) => history.push(\"/cart\")}>Go to Cart</Button>\n        <Button onClick={handleToClose}>Continue Shopping</Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  const listPlants = items?.map((plant) => (\n    <div className=\"product\" key={plant.id}>\n      <img src={plant.img_url} alt=\"product\"></img>\n      <h2>{plant.name}</h2>\n      <h2>${plant.price}</h2>\n      <button\n        className=\"add-cart\"\n        value={plant.id}\n        name={plant.name}\n        onClick={(e) => handleSubmit(e)}\n      >\n        Add to Cart\n      </button>\n    </div>\n  ));\n\n  return (\n    <div className=\"shop\">\n      {listPlants} {handleNavigateCart}\n    </div>\n  );\n}\nexport default Items;\n"]},"metadata":{},"sourceType":"module"}